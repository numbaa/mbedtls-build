name: Build
on: workflow_dispatch
jobs:
  Windows:
    permissions:
      contents: write
    runs-on: windows-2022
    steps:
      - name: Checkout mbedtls
        uses: actions/checkout@v4
        with:
          repository: Mbed-TLS/mbedtls
          ref: v3.2.1
          path: mbedtls
      - name: Init MSVC
        uses: ilammy/msvc-dev-cmd@v1
      - name: Build mbedtls
        run: |
          cd mbedtls
          mkdir build
          cd build
          cmake .. -DENABLE_TESTING=OFF -DENABLE_PROGRAMS=OFF -DDISABLE_PACKAGE_CONFIG_AND_INSTALL=OFF
          cmake --build . --config Debug
          cmake --install . --config Debug --prefix install/Debug
          cmake --build . --config Release
          cmake --install . --config Release --prefix install/Release
      - name: Generate zip
        run: |
          echo ${{ github.sha }} > Release.txt
          Compress-Archive -Path ./mbedtls/build/install/*,./Release.txt -DestinationPath mbedtls.win.${{ github.ref_name }}.zip
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: mbedtls.win.${{ github.ref_name }}.zip
  Linux:
    permissions:
      contents: write
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout mbedtls
        uses: actions/checkout@v4
        with:
          repository: Mbed-TLS/mbedtls
          ref: v3.2.1
          path: mbedtls
      - name: Install deps
        run: |
          sudo apt-get -y install gcc-10 g++-10
      - name: Build
        run: |
          alias gcc='gcc-10'
          alias g++='g++-10'
          export CC=`which gcc-10`
          export CXX=`which g++-10`
          cd mbedtls
          mkdir build
          cd build
          cmake .. -B Release -DCMAKE_BUILD_TYPE=Release -DENABLE_TESTING=OFF -DENABLE_PROGRAMS=OFF -DDISABLE_PACKAGE_CONFIG_AND_INSTALL=OFF -DUSE_SHARED_MBEDTLS_LIBRARY=ON
          cmake --build Release
          cmake --install Release/ --prefix install/Release
      - name: Generate tar
        run: |
          echo ${{ github.sha }} > Release.txt
          cp Release.txt ./mbedtls/build/install/Release
          tar -czvf mbedtls.linux.${{ github.ref_name }}.tar.gz -C ./mbedtls/build/install/Release .
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: mbedtls.linux.${{ github.ref_name }}.tar.gz
  macOS:
    permissions:
      contents: write
    runs-on: macos-14
    steps:
      - name: Checkout mbedtls
        uses: actions/checkout@v4
        with:
          repository: Mbed-TLS/mbedtls
          ref: v3.2.1
          path: mbedtls
      - name: Build
        run: |
          cd mbedtls
          mkdir build
          cd build
          cmake .. -B Release -DCMAKE_BUILD_TYPE=Release -DENABLE_TESTING=OFF -DENABLE_PROGRAMS=OFF -DDISABLE_PACKAGE_CONFIG_AND_INSTALL=OFF -DUSE_SHARED_MBEDTLS_LIBRARY=ON
          cmake --build Release
          cmake --install Release/ --prefix install/Release
      - name: Generate tar
        run: |
          echo ${{ github.sha }} > Release.txt
          cp Release.txt ./mbedtls/build/install/Release
          tar -czvf mbedtls.macos.${{ github.ref_name }}.tar.gz -C ./mbedtls/build/install/Release .
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: mbedtls.macos.${{ github.ref_name }}.tar.gz
